library(dplyr)
# Cargamos el fichero de datos
titanic_data <- read.csv('../data/titanic_train.csv',stringsAsFactors = FALSE)
# Primeros registros del dataset
head(titanic_data)
# Verificamos la estructura del conjunto de datos
str(titanic_data)
#Estadísticas básicas
summary(titanic_data)
# Seleccionamos las variables relevantes
titanic_data <- titanic_data[c('Survived', 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Cabin', 'Embarked')]
str(titanic_data)
# Valores perdidos
colSums(is.na(titanic_data))
colSums(titanic_data=="")
# Sustituimos los valores vacíos de la variable 'Age' por la media
titanic_data$Age[is.na(titanic_data$Age)] <- mean(titanic_data$Age,na.rm=T)
# Sustituimos los valores vacíos de la variable 'Embarked' por el valor U (unknown)
titanic_data$Embarked[titanic_data$Embarked==""]="U"
# Valores perdidos
colSums(is.na(titanic_data))
colSums(titanic_data=="")
# Realizamos un diagrama de caja para comprobar si existen valores atípicos dentro de la variable 'Fare'
boxplot(titanic_data$"Fare",main="Box plot", col="gray")
# Reemplazamos los valores extremo en la variable 'Fare' por la media del resto
mean_fare <- mean(titanic_data$Fare[(titanic_data$Fare < 500) & (titanic_data$Fare != 0)])
titanic_data$Fare[titanic_data$Fare > 500] <- mean_fare
titanic_data$Fare[titanic_data$Fare == 0] <- mean_fare
# Realizamos un diagrama de caja para comprobar si existen valores atípicos dentro de la variable 'Age'
boxplot(titanic_data$"Age",main="Box plot", col="gray")
# Convertimos la variable 'Sex' a categórica
titanic_data$Sex <- as.factor(titanic_data$Sex)
# Convertimos la variable 'Survived' a categórica
titanic_data$Survived <- as.factor(titanic_data$Survived)
# Convertimos la variable 'Pclass' a categórica
titanic_data$Pclass <- as.factor(titanic_data$Pclass)
# Convertimos la variable 'SibSp' a categórica
titanic_data$SibSp <- as.factor(titanic_data$SibSp)
# Convertimos la variable 'Parch' a categórica
titanic_data$Parch <- as.factor(titanic_data$Parch)
# Convertimos la variable 'Embarked' a categórica
titanic_data$Embarked <- as.factor(titanic_data$Embarked)
#Estadísticas básicas
summary(titanic_data)
# Agrupación por sexo
titanic_data.female <- titanic_data[titanic_data$Sex == 'female',]
titanic_data.male <- titanic_data[titanic_data$Sex == 'male',]
# Agrupación por clase
titanic_data.class_1 <- titanic_data[titanic_data$Pclase == '1',]
titanic_data.class_2 <- titanic_data[titanic_data$Pclass == '2',]
titanic_data.class_3 <- titanic_data[titanic_data$Pclass == '3',]
# Agrupación por supervivencia
titanic_data.survived_no <- titanic_data[titanic_data$Survived == '0',]
titanic_data.survived_yes <- titanic_data[titanic_data$Survived == '1',]
# Agrupación por el puerto de embarque
titanic_data.embarked_c <- titanic_data[titanic_data$Embarked == 'C',]
titanic_data.embarked_q <- titanic_data[titanic_data$Embarked == 'Q',]
titanic_data.embarked_s <- titanic_data[titanic_data$Embarked == 'S',]
titanic_data.embarked_u <- titanic_data[titanic_data$Embarked == 'U',]
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
View(titanic_data)
View(titanic_data.embarked_u)
View(titanic_data.embarked_s)
View(titanic_data.survived_yes)
library(dplyr)
# Cargamos el fichero de datos
titanic_data <- read.csv('../data/titanic_train.csv',stringsAsFactors = FALSE)
# Primeros registros del dataset
head(titanic_data)
# Verificamos la estructura del conjunto de datos
str(titanic_data)
#Estadísticas básicas
summary(titanic_data)
# Seleccionamos las variables relevantes
titanic_data <- titanic_data[c('Survived', 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Cabin', 'Embarked')]
str(titanic_data)
# Valores perdidos
colSums(is.na(titanic_data))
colSums(titanic_data=="")
# Sustituimos los valores vacíos de la variable 'Age' por la media
titanic_data$Age[is.na(titanic_data$Age)] <- mean(titanic_data$Age,na.rm=T)
# Sustituimos los valores vacíos de la variable 'Embarked' por el valor U (unknown)
titanic_data$Embarked[titanic_data$Embarked==""]="U"
# Valores perdidos
colSums(is.na(titanic_data))
colSums(titanic_data=="")
# Realizamos un diagrama de caja para comprobar si existen valores atípicos dentro de la variable 'Fare'
boxplot(titanic_data$"Fare",main="Box plot", col="gray")
# Reemplazamos los valores extremo en la variable 'Fare' por la media del resto
mean_fare <- mean(titanic_data$Fare[(titanic_data$Fare < 500) & (titanic_data$Fare != 0)])
titanic_data$Fare[titanic_data$Fare > 500] <- mean_fare
titanic_data$Fare[titanic_data$Fare == 0] <- mean_fare
# Realizamos un diagrama de caja para comprobar si existen valores atípicos dentro de la variable 'Age'
boxplot(titanic_data$"Age",main="Box plot", col="gray")
# Convertimos la variable 'Sex' a categórica
titanic_data$Sex <- as.factor(titanic_data$Sex)
# Convertimos la variable 'Survived' a categórica
titanic_data$Survived <- as.factor(titanic_data$Survived)
# Convertimos la variable 'Pclass' a categórica
titanic_data$Pclass <- as.factor(titanic_data$Pclass)
# Convertimos la variable 'SibSp' a categórica
titanic_data$SibSp <- as.factor(titanic_data$SibSp)
# Convertimos la variable 'Parch' a categórica
titanic_data$Parch <- as.factor(titanic_data$Parch)
# Convertimos la variable 'Embarked' a categórica
titanic_data$Embarked <- as.factor(titanic_data$Embarked)
#Estadísticas básicas
summary(titanic_data)
# Agrupación por sexo
titanic_data.female <- titanic_data[titanic_data$Sex == 'female',]
titanic_data.male <- titanic_data[titanic_data$Sex == 'male',]
# Agrupación por clase
titanic_data.class_1 <- titanic_data[titanic_data$Pclase == '1',]
titanic_data.class_2 <- titanic_data[titanic_data$Pclass == '2',]
titanic_data.class_3 <- titanic_data[titanic_data$Pclass == '3',]
# Agrupación por supervivencia
titanic_data.survived_no <- titanic_data[titanic_data$Survived == '0',]
titanic_data.survived_yes <- titanic_data[titanic_data$Survived == '1',]
# Agrupación por el puerto de embarque
titanic_data.embarked_c <- titanic_data[titanic_data$Embarked == 'C',]
titanic_data.embarked_q <- titanic_data[titanic_data$Embarked == 'Q',]
titanic_data.embarked_s <- titanic_data[titanic_data$Embarked == 'S',]
titanic_data.embarked_u <- titanic_data[titanic_data$Embarked == 'U',]
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
# Comparativa distribución variable 'Age' y normal
library(ggplot2)
ggplot(data = titanic_data, aes(x = Age)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(titanic_data$Age), sd = sd(titanic_data$Age))) +
ggtitle("Histograma con curva normal teórica") +
theme_bw()
ggplot(data = titanic_data, aes(x = Fare)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(titanic_data$Fare), sd = sd(titanic_data$Fare))) +
ggtitle("Histograma con curva normal teórica") +
theme_bw()
p_val = ad.test(titanic_data[,i])$p.value
cat(col.names[i] + "p-valor = "+p_val)
cat(p_val)
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
# cat(p_val)
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
alpha = 0.05
library(dplyr)
# Cargamos el fichero de datos
titanic_data <- read.csv('../data/titanic_train.csv',stringsAsFactors = FALSE)
# Primeros registros del dataset
head(titanic_data)
# Verificamos la estructura del conjunto de datos
str(titanic_data)
#Estadísticas básicas
summary(titanic_data)
# Seleccionamos las variables relevantes
titanic_data <- titanic_data[c('Survived', 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Cabin', 'Embarked')]
str(titanic_data)
# Valores perdidos
colSums(is.na(titanic_data))
colSums(titanic_data=="")
# Sustituimos los valores vacíos de la variable 'Age' por la media
titanic_data$Age[is.na(titanic_data$Age)] <- mean(titanic_data$Age,na.rm=T)
# Sustituimos los valores vacíos de la variable 'Embarked' por el valor U (unknown)
titanic_data$Embarked[titanic_data$Embarked==""]="U"
# Valores perdidos
colSums(is.na(titanic_data))
colSums(titanic_data=="")
# Realizamos un diagrama de caja para comprobar si existen valores atípicos dentro de la variable 'Fare'
boxplot(titanic_data$"Fare",main="Box plot", col="gray")
# Reemplazamos los valores extremo en la variable 'Fare' por la media del resto
mean_fare <- mean(titanic_data$Fare[(titanic_data$Fare < 500) & (titanic_data$Fare != 0)])
titanic_data$Fare[titanic_data$Fare > 500] <- mean_fare
titanic_data$Fare[titanic_data$Fare == 0] <- mean_fare
# Realizamos un diagrama de caja para comprobar si existen valores atípicos dentro de la variable 'Age'
boxplot(titanic_data$"Age",main="Box plot", col="gray")
# Convertimos la variable 'Sex' a categórica
titanic_data$Sex <- as.factor(titanic_data$Sex)
# Convertimos la variable 'Survived' a categórica
titanic_data$Survived <- as.factor(titanic_data$Survived)
# Convertimos la variable 'Pclass' a categórica
titanic_data$Pclass <- as.factor(titanic_data$Pclass)
# Convertimos la variable 'SibSp' a categórica
titanic_data$SibSp <- as.factor(titanic_data$SibSp)
# Convertimos la variable 'Parch' a categórica
titanic_data$Parch <- as.factor(titanic_data$Parch)
# Convertimos la variable 'Embarked' a categórica
titanic_data$Embarked <- as.factor(titanic_data$Embarked)
#Estadísticas básicas
summary(titanic_data)
# Agrupación por sexo
titanic_data.female <- titanic_data[titanic_data$Sex == 'female',]
titanic_data.male <- titanic_data[titanic_data$Sex == 'male',]
# Agrupación por clase
titanic_data.class_1 <- titanic_data[titanic_data$Pclase == '1',]
titanic_data.class_2 <- titanic_data[titanic_data$Pclass == '2',]
titanic_data.class_3 <- titanic_data[titanic_data$Pclass == '3',]
# Agrupación por supervivencia
titanic_data.survived_no <- titanic_data[titanic_data$Survived == '0',]
titanic_data.survived_yes <- titanic_data[titanic_data$Survived == '1',]
# Agrupación por el puerto de embarque
titanic_data.embarked_c <- titanic_data[titanic_data$Embarked == 'C',]
titanic_data.embarked_q <- titanic_data[titanic_data$Embarked == 'Q',]
titanic_data.embarked_s <- titanic_data[titanic_data$Embarked == 'S',]
titanic_data.embarked_u <- titanic_data[titanic_data$Embarked == 'U',]
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
# cat(p_val)
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
# Comparativa distribución variable 'Age' y normal
library(ggplot2)
ggplot(data = titanic_data, aes(x = Age)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(titanic_data$Age), sd = sd(titanic_data$Age))) +
ggtitle("Histograma con curva normal teórica") +
theme_bw()
ggplot(data = titanic_data, aes(x = Fare)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = mean(titanic_data$Fare), sd = sd(titanic_data$Fare))) +
ggtitle("Histograma con curva normal teórica") +
theme_bw()
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(p_val)
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(": p-valor ")
cat(p_val)
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(": p-valor ")
cat(p_val)
cat("\n")
# Format output
if (i < ncol(titanic_data) - 1) cat(", ")
if (i %% 3 == 0) cat("\n")
}
}
}
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(": p-valor ")
cat(p_val)
cat("\n")
# Format output
if (i < ncol(titanic_data) - 1) cat("")
if (i %% 3 == 0) cat("\n")
}
}
}
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(": p-valor ")
cat(p_val)
cat("\n")
# Format output
#if (i < ncol(titanic_data) - 1) cat("")
if (i %% 3 == 0) cat("\n")
}
}
}
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(": p-valor ")
cat(p_val)
cat("\n")
# Format output
#if (i < ncol(titanic_data) - 1) cat("")
#if (i %% 3 == 0) cat("\n")
}
}
}
library(nortest)
alpha = 0.05
col.names = colnames(titanic_data)
for (i in 1:ncol(titanic_data)) {
if (i == 1) cat("Variables que no siguen una distribución normal:\n")
if (is.integer(titanic_data[,i]) | is.numeric(titanic_data[,i])) {
p_val = ad.test(titanic_data[,i])$p.value
if (p_val < alpha) {
cat(col.names[i])
cat(": p-valor ")
cat(p_val)
cat("\n")
}
}
}
